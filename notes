Computational Chemistry Programmin Project

Inés Sánchez de Movellán

04/11/2020
- Programming language: FORTRAN 90
- Monte Carlo algorithm for displacements
- Serial code version
- Then: paralelization and molecular dynamics simulation

- Read information
- Create github repository to upload the code
- Create a main program main.f90
- Create a module to perform the simulation
- Create a makefile to compile and execute the code
Inside the module, we have create the initial_geom(n,L,geom0) subroutine, which allows to create
the initial geometry of the system setting (at least now) a random distribution of the particles.
The geometry is written in an xyz file that could be read with avogadro. On the other hand,
we have done an algorithim with 2 do loops to calculate the square of the inter-particle 
distance among all particles. To do that, we store the distances in a matrix in which the
off diagonal elements are zero: 
r12 r13 r14 r15 ... r1n
0   r23 r24 r25 ... r2n
0   0   r34 r35 ... r3n
0   0    0   :       :
:   :    :   :       :
0   0    0   0  ... rnn

05/11/2020
In the same subroutine (energy) we have computed the value of r**12 and r**6 which will be
used to obtain the potential energy. We computed the intial values of these powers of the 
distance and the initial potential energy. Then, the Monte Carlo algorithm (a initial version of
it) starts. We have defined a maximun number of cycles (chosen by the user) and a threshold in
the energy change (also chosen by the user). Inside the do while loop of the MC, we chose
a random atom and displaced it, we compute the energy and the energy diference between it
and the previous geometry and, if delta_V is less than 0 the displacement is accepted. When 
delta_V is positive, we evaluate the boltzmann factor and compare it to a random number between
0 and 1. If random is less than exp(-delta_V) the displacement is accepted and a new cycle
with the new geometry starts, if not, a new cycle with the previous geometry starts. 
